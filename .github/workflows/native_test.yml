name: Native Test

on:
  push:
    branches: [ release/* ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        platform: 
          -
            os: ubuntu-22.04
            cc: gcc
            cxx: g++
            ld: ld
            version: 12
            lib: libstdc++
            std: gnu17
          -
            os: ubuntu-22.04
            cc: clang
            cxx: clang++
            ld: ld.lld-15
            version: 15
            lib: libstdc++
            std: 20
          -
            os: ubuntu-24.04
            cc: gcc
            cxx: g++
            ld: ld
            version: 14
            lib: libstdc++
            std: gnu20
          - 
            os: ubuntu-24.04
            cc: clang
            cxx: clang++
            ld: ld.lld-17
            version: 17
            lib: libstdc++
            std: 20
        type: [Debug, Release]

    env:
      BUILD_TYPE:  ${{ matrix.type }}
      CC: /usr/bin/${{ matrix.platform.cc }}-${{ matrix.platform.version }}
      CXX: /usr/bin/${{ matrix.platform.cxx }}-${{ matrix.platform.version }}
      LD: /usr/bin/${{ matrix.platform.ld }}
    
    runs-on: ${{ matrix.platform.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get install -y xvfb blender python3-numpy
        sudo pipx install conan 

    - name: Conan Build
      run: |
        conan profile detect
        conan build . --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True -s:a compiler=${{ matrix.platform.cc }} -s:a build_type=${{ matrix.type }} -s:a compiler.version=${{ matrix.platform.version }} -s:a compiler.libcxx=${{ matrix.platform.lib }} -s:a compiler.cppstd=${{ matrix.platform.std }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        Xvfb :0 &
        export DISPLAY=:0
        ctest -C ${{env.BUILD_TYPE}} --rerun-failed --output-on-failure